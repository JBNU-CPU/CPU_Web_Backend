name: Deploy Spring Boot to Ubuntu Server

on:
  push:
    branches:
      - main  # main 브랜치에 push될 때 실행

jobs:
  deploy:
    runs-on: ubuntu-latest  # GitHub Actions에서 사용할 OS

    steps:
      - name: Checkout code
        uses: actions/checkout@v3  # 코드 가져오기

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Build with Gradle
        run: ./gradlew build -x test  # 빌드 (테스트 제외)

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: jar-file
          path: build/libs/web-0.0.1-SNAPSHOT.jar  # 빌드된 JAR 파일 저장

      - name: Install SSH client
        run: sudo apt-get install -y sshpass  # SSH 비밀번호 접속을 위해 sshpass 설치

      - name: Deploy to Ubuntu server
        run: |
          echo "Copying JAR file to Ubuntu Server..."
          sshpass -p "${{ secrets.server_pass }}" scp -P 2222 -o StrictHostKeyChecking=no build/libs/web-0.0.1-SNAPSHOT.jar ${{ secrets.server_user }}@${{ secrets.server_host }}:/home/${{ secrets.server_user }}/web-0.0.1-SNAPSHOT.jar

          echo "Deploying application on Ubuntu Server..."
          sshpass -p "${{ secrets.server_pass }}" ssh -p 2222 -o StrictHostKeyChecking=no ${{ secrets.server_user }}@${{ secrets.server_host }} << 'EOF'
            echo "Stopping current Java application..."
            PID=$(pgrep -f 'java -jar')
            if [ -n "$PID" ]; then
              kill -9 $PID
              echo "Stopped process $PID"
            else
              echo "No Java process found"
            fi

            echo "Starting new application..."
            export SPRING_DATASOURCE_URL=${{ secrets.RDS_URL }}
            export SPRING_DATASOURCE_USERNAME=${{ secrets.RDS_USERNAME }}
            export SPRING_DATASOURCE_PASSWORD=${{ secrets.RDS_PASSWORD }}

            nohup java -jar /home/${{ secrets.server_user }}/web-0.0.1-SNAPSHOT.jar --spring.profiles.active=rds > /home/${{ secrets.server_user }}/app.log 2>&1 &

            NEW_PID=$(pgrep -f 'java -jar')
            if [ -n "$NEW_PID" ]; then
              echo "New application started with PID $NEW_PID"
            else
              echo "Failed to start new application"
              tail -n 50 /home/${{ secrets.server_user }}/app.log
              exit 1
            fi
          EOF
