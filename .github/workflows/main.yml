name: CI/CD Pipeline for Dockerized Spring Boot

on:
  push:
    branches:
      - main  # main 브랜치에 push될 때 트리거

jobs:
  deploy:
    runs-on: ubuntu-latest  # GitHub Actions: Ubuntu 환경
    env:
      ACTIONS_STEP_DEBUG: true  # 디버그 모드(로그 자세히 출력)

    steps:
      # 1) 소스 코드 체크아웃
      - name: Checkout code
        uses: actions/checkout@v3

      # 2) JDK 21 설정 (빌드용)
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'

      # 3) Gradle 실행 권한 부여
      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      # 4) Gradle로 빌드 (테스트는 -x test 옵션으로 생략)
      - name: Build with Gradle
        run: ./gradlew build -x test

      # 5) sshpass 설치 (비밀번호 기반 SSH 자동화)
      - name: Install sshpass
        run: |
          sudo apt-get update
          sudo apt-get install -y sshpass

      # 6) 서버에 JAR 및 설정 파일 배포
      - name: Copy project files to server
        run: |
          echo "Copying necessary files to server..."

          sshpass -p "${{ secrets.SERVER_PASS }}" scp -P 2222 -o StrictHostKeyChecking=no \
            docker-compose.yml .env Dockerfile \
            ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }}:/home/cpu/my-app/

          sshpass -p "${{ secrets.SERVER_PASS }}" scp -P 2222 -o StrictHostKeyChecking=no \
            build/libs/web-0.0.1-SNAPSHOT.jar \
            ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }}:/home/cpu/my-app/web-0.0.1-SNAPSHOT.jar

      # 7) 서버에서 Docker Compose를 실행하여 애플리케이션 배포
      - name: Deploy and build Docker image on server
        run: |
          sshpass -p "${{ secrets.SERVER_PASS }}" ssh -p 2222 -o StrictHostKeyChecking=no \
            ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} << EOF

            cd /home/cpu/my-app/

            echo "Stopping old containers..."
            docker-compose down

            echo "Removing old images..."
            docker rmi my-spring-app:latest || true

            echo "Building Docker image..."
            docker build -t my-spring-app:latest .

            echo "Restarting containers..."
            docker-compose up -d --build

            echo "Checking running containers..."
            docker ps
          EOF
